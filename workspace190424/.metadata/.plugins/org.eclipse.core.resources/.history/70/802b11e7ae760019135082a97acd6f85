select * from emp;

delete from emp where empno = 9999 or empno = 9991;

select lower(ename), hiredate, to_char(hiredate, 'yy') from emp;

select round(1.5), trunc(1.5), 1.5
from dual;

select ename, deptno, sal, DECODE(DEPTNO, 10, sal*1.1) as "raise sal" 
from emp

--DECODE 는 SWITCH와 비슷
select ename, deptno, sal, 
DECODE(DEPTNO, 10, sal*1.1, 20, SAL*1.2 ,30, SAL*1.3) 
as "raise sal" 
from emp

--자동 형변환이 된다.
SELECT ENAME, MGR, NVL2(MGR, '0', 'X')
FROM EMP;

SELECT ENAME, MGR, NVL(TO_CHAR(MGR), 'X')
FROM EMP;

--모든 경우의 수를 다 따져서 출력 CATESIAN PRODUCT
--CROSS JOIN
SELECT * 
FROM EMP E, DEPT D;


SELECT * 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

--ORACLE EQUI JOIN
SELECT ENAME, E.ENAME, E.JOB, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO;

--ANSI STANDARD INNER JOIN
--, => JOIN    WHERE => ON
SELECT ENAME, E.ENAME, E.JOB, D.DNAME, D.LOC
FROM EMP E INNER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

--ORACLE STYLE EQUI JOIN 
SELECT E.JOB, E.ENAME, D.DNAME, E.SAL
FROM EMP E , DEPT D
WHERE E.SAL >= 2000 AND E.DEPTNO = D.DEPTNO;

--ANSI STYLE INNER JOIN
SELECT E.JOB, E.ENAME, D.DNAME, E.SAL
FROM EMP E JOIN DEPT D
ON E.SAL >= 2000 AND E.DEPTNO = D.DEPTNO;

SELECT E.JOB, E.ENAME, D.DNAME, E.SAL
FROM EMP E JOIN DEPT D
ON E.SAL >= 2000 
WHERE E.DEPTNO = D.DEPTNO;

SELECT *
FROM EMP E JOIN DEPT D
ON E.SAL >= 2000 
WHERE E.DEPTNO = D.DEPTNO;

--ORACLE STYLE OUTER JOIN : MARK (+) SIGN ON MASTER
SELECT ENAME, E.ENAME, E.JOB, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO(+) = D.DEPTNO;

SELECT ENAME, E.ENAME, E.JOB, D.DNAME, D.LOC
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO(+);

--ANSI STYLE OUTER JOIN. POINT MASTER
SELECT ENAME, E.ENAME, E.JOB, D.DNAME, D.LOC
FROM EMP E RIGHT OUTER JOIN DEPT D
ON E.DEPTNO = D.DEPTNO;

SELECT * 
FROM SALGRADE;

SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL >= S.lOSAL AND E.SAL <= S.HISAL;

SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E, SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;

SELECT E.ENAME, E.SAL, S.GRADE
FROM EMP E JOIN SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL;

SELECT E.ENAME 사원이름, M.ENAME 상사이름
FROM EMP E, EMP M
WHERE E.MGR = M.EMPNO(+);

SELECT E.ENAME 사원이름, NVL(M.ENAME, '<<CEO>>') 상사이름
FROM EMP E LEFT OUTER JOIN EMP M
ON E.MGR = M.EMPNO;

--상사보다 입사일자가 빠른 사원
SELECT * FROM EMP;

SELECT E.ENAME, E.MGR, M.HIREDATE 매니저입사일,E.HIREDATE 사원입사일
FROM EMP E, EMP M
WHERE E.HIREDATE < M.HIREDATE AND M.EMPNO = E.MGR;

--상사보다 급여가 많은 사원
SELECT E.ENAME, M.ENAME, E.SAL 사원월급, M.SAL 매니저월
FROM EMP E, EMP M
WHERE M.EMPNO = E.MGR AND E.SAL > M.SAL;

SELECT E.ENAME, M.ENAME, E.SAL 사원월급, M.SAL 매니저월
FROM EMP E JOIN EMP M
ON M.EMPNO = E.MGR 
WHERE E.SAL > M.SAL;

SELECT ENAME, ROUND(SAL, 2)
FROM EMP;

--집계함수
SELECT AVG(SAL)
FROM EMP;

SELECT COUNT(SAL), COUNT(COMM), COUNT(MGR), COUNT(*)
FROM EMP;

--중복제거
SELECT COUNT(DISTINCT JOB) FROM EMP;

SELECT SUM(SAL) FROM EMP;

SELECT SUM(SAL), COUNT(*), SUM(SAL)/COUNT(*), AVG(SAL) FROM EMP;

SELECT SUM(SAL), COUNT(*), 
ROUND(SUM(SAL)/COUNT(*),2), ROUND(AVG(SAL) ,2)
FROM EMP;

SELECT SUM(SAL), COUNT(*), 
ROUND(SUM(SAL)/COUNT(*),2), ROUND(AVG(SAL) ,2)
FROM EMP
WHERE DEPTNO = 10;

SELECT DEPTNO,
	SUM(SAL), 
	COUNT(*), 
	ROUND(SUM(SAL)/COUNT(*),2), 
	ROUND(AVG(SAL) ,2)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO,
	MAX(SAL), 
	MIN(SAL), 
	COUNT(*), 
	ROUND(SUM(SAL)/COUNT(*),2), 
	ROUND(AVG(SAL) ,2)
FROM EMP
GROUP BY DEPTNO;

SELECT DEPTNO, ENAME, ROUND(AVG(SAL),2)
FROM EMP
GROUP BY DEPTNO, ENAME
order BY DEPTNO;














